name: Deploy

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Clean build directory
        run: ./gradlew clean

      - name: gradlew bootJar
        run: ./gradlew bootJar

      - name: Clean previous deployments on server
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ec2-user
          key: ${{ secrets.SSH_KEY }}
          port: 22
          script: |
            echo "Removing old JAR file or directory..."
            rm -rf ~/app.jar
            echo "Clean up completed."

      - name: Copy JAR to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ec2-user
          key: ${{ secrets.SSH_KEY }}
          port: 22
          source: "./build/libs/*.jar"
          target: "~/app.jar"

      - name: Verify JAR file on server
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ec2-user
          key: ${{ secrets.SSH_KEY }}
          port: 22
          script: |
            if [ -f ~/app.jar ]; then
              echo "app.jar successfully copied."
            else
              echo "Error: app.jar not found."
              exit 1
            fi

      - name: Restart application
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ec2-user
          key: ${{ secrets.SSH_KEY }}
          port: 22
          script_stop: true
          script: |
            echo "Stopping any running Java processes..."
            for pid in $(pgrep java); do
              if ps -p $pid -o args= | grep -q 'java -jar'; then
                echo "Terminating previous Java process (PID: $pid)..."
                kill -9 $pid
              fi
            done
            echo "Starting new application..."
            nohup java -jar ~/app.jar > ~/app.log 2>&1 &
            echo "Application started successfully."
